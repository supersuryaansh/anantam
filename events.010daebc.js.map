{"mappings":"AAAA,MAAM;IACJ,YAAY,EAAE,CAAE;QACd,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM;IACb;IAEA,SAAS;QACP,SAAS,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1C,MAAM,gBAAgB,QAAQ,qBAAqB;YACnD,MAAM,cAAc,iBAAiB,IAAI,CAAC,WAAW,GAAG;YACxD,QAAQ,KAAK,CAAC,WAAW,CAAC,mBAAmB;YAE7C,QAAQ,gBAAgB,CAAC,cAAc,CAAC;gBACtC,QAAQ,KAAK,CAAC,WAAW,CACvB,cACA,eAAe,IAAI,CAAC,MAAM,GAAG;YAEjC;YAEA,QAAQ,gBAAgB,CAAC,aAAa,CAAC;gBACrC,IAAI,KAAK,EAAE,OAAO,GAAG,cAAc,GAAG;gBACtC,IAAI,KAAK,EAAE,OAAO,GAAG,cAAc,IAAI;gBACvC,IAAI,OAAO,IAAI,CAAC,GAAG,CACjB,IACA,GACA,cAAc,KAAK,EACnB,CAAC,IAAI,CAAC,OAAO,EACb,IAAI,CAAC,OAAO;gBAEd,IAAI,OAAO,IAAI,CAAC,GAAG,CACjB,IACA,GACA,cAAc,MAAM,EACpB,IAAI,CAAC,OAAO,EACZ,CAAC,IAAI,CAAC,OAAO;gBAEf,IAAI,WAAW,aAAa,OAAO;gBACnC,IAAI,WAAW,aAAa,OAAO;gBAEnC,QAAQ,KAAK,CAAC,WAAW,CACvB,aACA,cAAc,WAAW;YAE7B;YAEA,QAAQ,gBAAgB,CAAC,cAAc,CAAC;gBACtC,QAAQ,KAAK,CAAC,WAAW,CACvB,cACA,eAAe,IAAI,CAAC,OAAO,GAAG;gBAEhC,QAAQ,KAAK,CAAC,WAAW,CACvB,aACA,cAAc;YAElB;QACF;IACF;IACA,4BAA4B;IAC5B,IAAI,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;QACvC,OAAO,SAAS,AAAC,CAAA,QAAQ,MAAK,IAAM,CAAA,AAAC,CAAA,QAAQ,MAAK,IAAM,CAAA,QAAQ,MAAK,CAAC;IACxE;AACF","sources":["hover3D.js"],"sourcesContent":["class Hover3D {\n  constructor(id) {\n    this.id = id;\n    this.xOffset = 10;\n    this.yOffset = 10;\n    this.attack = 0.1;\n    this.release = 0.5;\n    this.perspective = 500;\n    this.create();\n  }\n\n  create() {\n    document.querySelectorAll(this.id).forEach((element) => {\n      const rectTransform = element.getBoundingClientRect();\n      const perspective = \"perspective(\" + this.perspective + \"px) \";\n      element.style.setProperty(\"transform-style\", \"preserve-3d\");\n\n      element.addEventListener(\"mouseenter\", (e) => {\n        element.style.setProperty(\n          \"transition\",\n          \"transform \" + this.attack + \"s\"\n        );\n      });\n\n      element.addEventListener(\"mousemove\", (e) => {\n        let dy = e.clientY - rectTransform.top;\n        let dx = e.clientX - rectTransform.left;\n        let xRot = this.map(\n          dx,\n          0,\n          rectTransform.width,\n          -this.xOffset,\n          this.xOffset\n        );\n        let yRot = this.map(\n          dy,\n          0,\n          rectTransform.height,\n          this.yOffset,\n          -this.yOffset\n        );\n        let propXRot = \"rotateX(\" + yRot + \"deg) \";\n        let propYRot = \"rotateY(\" + xRot + \"deg)\";\n\n        element.style.setProperty(\n          \"transform\",\n          perspective + propXRot + propYRot\n        );\n      });\n\n      element.addEventListener(\"mouseleave\", (e) => {\n        element.style.setProperty(\n          \"transition\",\n          \"transform \" + this.release + \"s\"\n        );\n        element.style.setProperty(\n          \"transform\",\n          perspective + \"rotateX(0deg) rotateY(0deg)\"\n        );\n      });\n    });\n  }\n  // Processing map() function\n  map(value, istart, istop, ostart, ostop) {\n    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n  }\n}\n"],"names":[],"version":3,"file":"events.010daebc.js.map","sourceRoot":"/__parcel_source_root/"}